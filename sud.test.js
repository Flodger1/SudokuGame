/* eslint-disable */
const {
  read,
  transformFromSptring,
  solve,
  isSolved,
  prettyBoard,
} = require("./sudoku");

describe("tests for sudoku-solver", () => {
  test("Решает судоку", () => {
    const arr =
      "1-58-2----9--764-52--4--819-19--73-6762-83-9-----61-5---76---3-43--2-5-16--3-89--";
    const newArr = transformFromSptring(arr);
    expect(solve(newArr)).toEqual([
      [1, 4, 5, 8, 9, 2, 6, 7, 3],
      [8, 9, 3, 1, 7, 6, 4, 2, 5],
      [2, 7, 6, 4, 3, 5, 8, 1, 9],
      [5, 1, 9, 2, 4, 7, 3, 8, 6],
      [7, 6, 2, 5, 8, 3, 1, 9, 4],
      [3, 8, 4, 9, 6, 1, 7, 5, 2],
      [9, 5, 7, 6, 1, 4, 2, 3, 8],
      [4, 3, 8, 7, 2, 9, 5, 6, 1],
      [6, 2, 1, 3, 5, 8, 9, 4, 7]
  ]);
  });
  test("Решает пустой судоку", () => {
    const arr =
      "---------------------------------------------------------------------------------";
    const newArr = transformFromSptring(arr);
    expect(solve(newArr)).toEqual([
      [1, 2, 3, 4, 5, 6, 7, 8, 9],
      [4, 5, 6, 7, 8, 9, 1, 2, 3],
      [7, 8, 9, 1, 2, 3, 4, 5, 6],
      [2, 1, 4, 3, 6, 5, 8, 9, 7],
      [3, 6, 5, 8, 9, 7, 2, 1, 4],
      [8, 9, 7, 2, 1, 4, 3, 6, 5],
      [5, 3, 1, 6, 4, 2, 9, 7, 8],
      [6, 4, 2, 9, 7, 8, 5, 3, 1],
      [9, 7, 8, 5, 3, 1, 6, 4, 2]
  ]);
  });
  test('Возвращает ли функция массив', () => {
    const arr =
    "-96-4---11---6---45-481-39---795--43-3--8----4-5-23-18-1-63--59-59-7-83---359---7";
    const newArr = transformFromSptring(arr);
    expect(Array.isArray(solve(newArr))).toEqual(true)
  })
});
